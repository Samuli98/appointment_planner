{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/AppointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","props","contacts","onChange","value","map","contact","name","AppointmentForm","title","setTitle","setContact","date","setDate","time","setTime","handleSubmit","onSubmit","type","target","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","tile","className","Object","values","index","TileList","tiles","AppointmentsPage","appointments","addAppointment","useState","length","e","preventDefault","ContactForm","setName","phone","setPhone","email","setEmail","required","pattern","ContactsPage","addContact","duplicate","setDuplicate","useEffect","undefined","find","App","setAppointments","setContacts","ROUTES","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fa0ab0c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n\r\n  const contacts = props.contacts;\r\n  const onChange = props.onChange;\r\n\r\n  return (\r\n    <select onChange={onChange}>\r\n      <option value=\"\">Select a contact</option>\r\n      {contacts.map(contact => <option value={contact.name}>{contact.name}</option>)}\r\n    </select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ContactPicker } from '../contactPicker/ContactPicker';\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  const getTodayString = () => {\r\n    const [month, day, year] = new Date()\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n    return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n      type=\"text\"\r\n      value={title}\r\n      onChange={({target}) => setTitle(target.value)}\r\n      placeholder=\"Title\"\r\n      />\r\n      <input \r\n      type=\"date\"\r\n      value={date}\r\n      min={getTodayString()}\r\n      onChange={({target}) => setDate(target.value)}\r\n      />\r\n      <input \r\n        type=\"time\"\r\n        value={time}\r\n        onChange={({target}) => setTime(target.value)}\r\n      />\r\n      <ContactPicker \r\n        contacts={contacts}\r\n        value={contact}\r\n        onChange={({target}) => setContact(target.value)}\r\n      />\r\n      <input type=\"submit\"/>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Tile = ({ tile }) => {\r\n  return (\r\n    <div className=\"tile-container\">\r\n      {Object.values(tile).map((value, index) => (\r\n        <p key={index} className={`${index === 0 ? \"tile-title\" : \"\"} tile`}>\r\n          {value}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Tile } from \"../tile/Tile\";\r\n\r\nexport const TileList = ({ tiles }) => {\r\n  return (\r\n    <div>\r\n      {tiles.map((tile, index) => (\r\n        <Tile key={index} tile={tile} />\r\n      ))}\r\n    </div>\r\n  );\r\n};","import React, { useState } from \"react\";\r\n\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({\r\n  appointments,\r\n  addAppointment,\r\n  contacts\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contact, setContact] = useState(\r\n    contacts.length > 0 ? contacts[0].name : \"\"\r\n  );\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addAppointment(title, contact, date, time);\r\n    setTitle(\"\");\r\n    setContact(\"\");\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          contacts={contacts}\r\n          title={title}\r\n          setTitle={setTitle}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList tiles={appointments} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text'\r\n      value={name}\r\n      onChange={({target}) => {setName(target.value)}}\r\n      required\r\n      placeholder=\"Name\"\r\n      />\r\n      <input type='tel'\r\n      value={phone}\r\n      onChange={({target}) => {setPhone(target.value)}}\r\n      pattern='^(\\+\\d{1,2}\\s?)?1?\\-?\\.?\\s?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$'\r\n      required\r\n      placeholder=\"Phone\"\r\n      />\r\n      <input type='email'\r\n      value={email}\r\n      onChange={({target}) => {setEmail(target.value)}}\r\n      required\r\n      placeholder=\"Email\"\r\n      />\r\n      <input type='submit' />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      addContact(name, phone, email);\r\n      setName(\"\");\r\n      setPhone(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const nameIsDuplicate = () => {\r\n      const found = contacts.find((contact) => contact.name === name);\r\n      if (found !== undefined) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    if (nameIsDuplicate()) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [name, contacts, duplicate]);\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h2>\r\n          Add Contact\r\n          {duplicate ? \" - Name Already Exists\" : \"\"}\r\n        </h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList tiles={contacts} />\r\n      </section>\r\n    </>\r\n  );\r\n};","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect, NavLink } from \"react-router-dom\";\r\n\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: \"/contacts\",\r\n    APPOINTMENTS: \"/appointments\",\r\n  };\r\n\r\n  const addAppointment = (title, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      {\r\n        title: title,\r\n        contact: contact,\r\n        date: date,\r\n        time: time,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const addContact = (name, phone, email) => {\r\n    setContacts([\r\n      ...contacts,\r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\r\n          Contacts\r\n        </NavLink>\r\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\r\n          Appointments\r\n        </NavLink>\r\n      </nav>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ROUTES.CONTACTS} />\r\n          </Route>\r\n          <Route path={ROUTES.CONTACTS}>\r\n            <ContactsPage contacts={contacts} addContact={addContact} />\r\n          </Route>\r\n          <Route path={ROUTES.APPOINTMENTS}>\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n              contacts={contacts}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}